/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentmanager.EntryForm;

import java.awt.Dimension;
import java.sql.SQLException;
import java.time.Year;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import studentmanager.JavaClasses.Department;
import studentmanager.JavaClasses.Season;
import studentmanager.JavaClasses.Semester;
import studentmanager.Repository.Repository;

/**
 *
 * @author fes77
 */
public class SemesterEntry extends javax.swing.JPanel {

    /**
     * Creates new form SemesterEntry
     */
    
    DefaultComboBoxModel<Season> seasonModel;
    JFrame frame;
    public SemesterEntry() {
        frame = new JFrame("Season Entry Form");
        seasonModel = new DefaultComboBoxModel<>();
        seasonModel.addAll(Arrays.asList(Season.values()));
        initComponents();
    }

    public void exec()
    {
        frame.setSize(new Dimension(500, 300));
        frame.setContentPane(this);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        seasonLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        seasonCmbBox = new javax.swing.JComboBox<>();
        yearEntry = new javax.swing.JFormattedTextField();

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        seasonLabel.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        seasonLabel.setText("Season");

        yearLabel.setFont(new java.awt.Font("MS UI Gothic", 0, 14)); // NOI18N
        yearLabel.setText("Year");

        seasonCmbBox.setModel(seasonModel);

        yearEntry.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seasonLabel)
                            .addComponent(yearLabel))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seasonCmbBox, 0, 240, Short.MAX_VALUE)
                            .addComponent(yearEntry))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seasonCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seasonLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed

        if(seasonModel.getSelectedItem() == null || yearEntry.getValue() == null)
        {
            JOptionPane.showMessageDialog(null, "Empty input");
            return;
        }
        
        if((long)yearEntry.getValue() > 2030 || (long)yearEntry.getValue() < 1990)
        {
            JOptionPane.showMessageDialog(null, "Invalid Year (Between 1990 and 2030)");
            yearEntry.setValue(null);
            return;
        }
        

        // Check for duplicate entry
        try {
            int year = (int)(long)yearEntry.getValue();
            Season season = (Season)seasonModel.getSelectedItem();
            for (Semester semester : Repository.findAllSemesters()) {
                if(semester.getSeason() == season && semester.getYear().equals(Year.of(year)))
                {
                    JOptionPane.showMessageDialog(null, "Duplication Entry : " + semester.toString());
                    return;
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Connection Error");
        }
        
        Semester semester = new Semester((Season)seasonModel.getSelectedItem(), Year.of((int)(long)yearEntry.getValue()));
        System.out.println(semester);
        frame.dispose();
    }//GEN-LAST:event_okButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox<Season> seasonCmbBox;
    private javax.swing.JLabel seasonLabel;
    private javax.swing.JFormattedTextField yearEntry;
    private javax.swing.JLabel yearLabel;
    // End of variables declaration//GEN-END:variables
}
